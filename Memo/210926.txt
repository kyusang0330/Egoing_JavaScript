
1. prototype

prototype은 객체의 원형이다.
prototype는 그 용도가 약속되어 있는 특수한 프로퍼티이다.
prototype에 저장된 속성들은 생성자를 통해서 객체가 만들어질 때 그 객체에 연결된다.

예)
function Ultra(){}
Ultra.prototype.ultraProp = true;
 
function Super(){}
Super.prototype = new Ultra();
 
function Sub(){}
Sub.prototype = new Super();
 
var o = new Sub();
console.log(o.ultraProp);

-----------------------------------------------------------------------

function Ultra(){}
Ultra.prototype.ultraProp = true;
 
function Super(){}
var t = new Ultra();
t.ultraProp = 4;
Super.prototype = t;

function Sub(){}
var s = new Super();
s.ultraProp = 3;
Sub.prototype = s;


var o = new Sub();

console.log(o.ultraProp);


2. 표준 내장 객체의 확장

1) 표준 내장 객체

표준 내장 객체는 js가 기본적으로 가지고 있는 객체들을 의미

종류

Object
Function
Array
Boolean
String
Number
Math
Date
RegExp

2) 배열의 확장

var arr = new Array('seoul', 'new york', 'ladarkh', ' pusan', 'Tsukuba');
function getRandomValueFromArray(arr){
    var index = Math.floor(arr.length * Math.random());
    return arr[index];
}
console.log(getRandomValueFromArray(arr));

배열에서 특정한 값을 랜덤으로 추출하는 코드이다.
0~4 개의 도시를 선언하고 arr이라는 인자를 주고, arr.length로 객체의 수만큼 램덤으로 돌릴 
수 있게 하였다.
* Math.floor : 소수점을 없애준다. 예) 1.1 -> 1   0.9 -> 0
* Math.random : 객체를 랜덤으로 출력해준다.

이러한 방법도 있지만 Array를 사용하여 배열이라는 것을 확실하게 보여주는 방법도 있다.

Array.prototype.random = function(){
    var index = Math.floor(this.length * Math.random());
    return this[index];
}
var arr = new Array('seoul', 'new york', 'ladarkh', ' pusan', 'Tsukuba');
console.log(arr.random());

Array를 사용하여 배열이라는 것을 확실하게 보여주고, arr을 인자로 쓰지 않고 인자 자리를 비우고
this를 사용할 수 있다.

